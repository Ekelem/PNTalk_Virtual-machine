// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: simulate.proto

#ifndef PROTOBUF_simulate_2eproto__INCLUDED
#define PROTOBUF_simulate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_simulate_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSimulateRequestImpl();
void InitDefaultsSimulateRequest();
void InitDefaultsSimulateReplyImpl();
void InitDefaultsSimulateReply();
inline void InitDefaults() {
  InitDefaultsSimulateRequest();
  InitDefaultsSimulateReply();
}
}  // namespace protobuf_simulate_2eproto
namespace virtualmachine {
class SimulateReply;
class SimulateReplyDefaultTypeInternal;
extern SimulateReplyDefaultTypeInternal _SimulateReply_default_instance_;
class SimulateRequest;
class SimulateRequestDefaultTypeInternal;
extern SimulateRequestDefaultTypeInternal _SimulateRequest_default_instance_;
}  // namespace virtualmachine
namespace virtualmachine {

// ===================================================================

class SimulateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:virtualmachine.SimulateRequest) */ {
 public:
  SimulateRequest();
  virtual ~SimulateRequest();

  SimulateRequest(const SimulateRequest& from);

  inline SimulateRequest& operator=(const SimulateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SimulateRequest(SimulateRequest&& from) noexcept
    : SimulateRequest() {
    *this = ::std::move(from);
  }

  inline SimulateRequest& operator=(SimulateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimulateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SimulateRequest* internal_default_instance() {
    return reinterpret_cast<const SimulateRequest*>(
               &_SimulateRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SimulateRequest* other);
  friend void swap(SimulateRequest& a, SimulateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SimulateRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SimulateRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SimulateRequest& from);
  void MergeFrom(const SimulateRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SimulateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // string scenario = 2;
  void clear_scenario();
  static const int kScenarioFieldNumber = 2;
  const ::std::string& scenario() const;
  void set_scenario(const ::std::string& value);
  #if LANG_CXX11
  void set_scenario(::std::string&& value);
  #endif
  void set_scenario(const char* value);
  void set_scenario(const char* value, size_t size);
  ::std::string* mutable_scenario();
  ::std::string* release_scenario();
  void set_allocated_scenario(::std::string* scenario);

  // int64 steps = 3;
  void clear_steps();
  static const int kStepsFieldNumber = 3;
  ::google::protobuf::int64 steps() const;
  void set_steps(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:virtualmachine.SimulateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr scenario_;
  ::google::protobuf::int64 steps_;
  mutable int _cached_size_;
  friend struct ::protobuf_simulate_2eproto::TableStruct;
  friend void ::protobuf_simulate_2eproto::InitDefaultsSimulateRequestImpl();
};
// -------------------------------------------------------------------

class SimulateReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:virtualmachine.SimulateReply) */ {
 public:
  SimulateReply();
  virtual ~SimulateReply();

  SimulateReply(const SimulateReply& from);

  inline SimulateReply& operator=(const SimulateReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SimulateReply(SimulateReply&& from) noexcept
    : SimulateReply() {
    *this = ::std::move(from);
  }

  inline SimulateReply& operator=(SimulateReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimulateReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SimulateReply* internal_default_instance() {
    return reinterpret_cast<const SimulateReply*>(
               &_SimulateReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SimulateReply* other);
  friend void swap(SimulateReply& a, SimulateReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SimulateReply* New() const PROTOBUF_FINAL { return New(NULL); }

  SimulateReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SimulateReply& from);
  void MergeFrom(const SimulateReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SimulateReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  const ::std::string& result() const;
  void set_result(const ::std::string& value);
  #if LANG_CXX11
  void set_result(::std::string&& value);
  #endif
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  ::std::string* mutable_result();
  ::std::string* release_result();
  void set_allocated_result(::std::string* result);

  // int64 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int64 status() const;
  void set_status(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:virtualmachine.SimulateReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr result_;
  ::google::protobuf::int64 status_;
  mutable int _cached_size_;
  friend struct ::protobuf_simulate_2eproto::TableStruct;
  friend void ::protobuf_simulate_2eproto::InitDefaultsSimulateReplyImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SimulateRequest

// string code = 1;
inline void SimulateRequest::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SimulateRequest::code() const {
  // @@protoc_insertion_point(field_get:virtualmachine.SimulateRequest.code)
  return code_.GetNoArena();
}
inline void SimulateRequest::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:virtualmachine.SimulateRequest.code)
}
#if LANG_CXX11
inline void SimulateRequest::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:virtualmachine.SimulateRequest.code)
}
#endif
inline void SimulateRequest::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:virtualmachine.SimulateRequest.code)
}
inline void SimulateRequest::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:virtualmachine.SimulateRequest.code)
}
inline ::std::string* SimulateRequest::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:virtualmachine.SimulateRequest.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SimulateRequest::release_code() {
  // @@protoc_insertion_point(field_release:virtualmachine.SimulateRequest.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SimulateRequest::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:virtualmachine.SimulateRequest.code)
}

// string scenario = 2;
inline void SimulateRequest::clear_scenario() {
  scenario_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SimulateRequest::scenario() const {
  // @@protoc_insertion_point(field_get:virtualmachine.SimulateRequest.scenario)
  return scenario_.GetNoArena();
}
inline void SimulateRequest::set_scenario(const ::std::string& value) {
  
  scenario_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:virtualmachine.SimulateRequest.scenario)
}
#if LANG_CXX11
inline void SimulateRequest::set_scenario(::std::string&& value) {
  
  scenario_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:virtualmachine.SimulateRequest.scenario)
}
#endif
inline void SimulateRequest::set_scenario(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scenario_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:virtualmachine.SimulateRequest.scenario)
}
inline void SimulateRequest::set_scenario(const char* value, size_t size) {
  
  scenario_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:virtualmachine.SimulateRequest.scenario)
}
inline ::std::string* SimulateRequest::mutable_scenario() {
  
  // @@protoc_insertion_point(field_mutable:virtualmachine.SimulateRequest.scenario)
  return scenario_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SimulateRequest::release_scenario() {
  // @@protoc_insertion_point(field_release:virtualmachine.SimulateRequest.scenario)
  
  return scenario_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SimulateRequest::set_allocated_scenario(::std::string* scenario) {
  if (scenario != NULL) {
    
  } else {
    
  }
  scenario_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scenario);
  // @@protoc_insertion_point(field_set_allocated:virtualmachine.SimulateRequest.scenario)
}

// int64 steps = 3;
inline void SimulateRequest::clear_steps() {
  steps_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SimulateRequest::steps() const {
  // @@protoc_insertion_point(field_get:virtualmachine.SimulateRequest.steps)
  return steps_;
}
inline void SimulateRequest::set_steps(::google::protobuf::int64 value) {
  
  steps_ = value;
  // @@protoc_insertion_point(field_set:virtualmachine.SimulateRequest.steps)
}

// -------------------------------------------------------------------

// SimulateReply

// int64 status = 1;
inline void SimulateReply::clear_status() {
  status_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SimulateReply::status() const {
  // @@protoc_insertion_point(field_get:virtualmachine.SimulateReply.status)
  return status_;
}
inline void SimulateReply::set_status(::google::protobuf::int64 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:virtualmachine.SimulateReply.status)
}

// string result = 2;
inline void SimulateReply::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SimulateReply::result() const {
  // @@protoc_insertion_point(field_get:virtualmachine.SimulateReply.result)
  return result_.GetNoArena();
}
inline void SimulateReply::set_result(const ::std::string& value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:virtualmachine.SimulateReply.result)
}
#if LANG_CXX11
inline void SimulateReply::set_result(::std::string&& value) {
  
  result_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:virtualmachine.SimulateReply.result)
}
#endif
inline void SimulateReply::set_result(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:virtualmachine.SimulateReply.result)
}
inline void SimulateReply::set_result(const char* value, size_t size) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:virtualmachine.SimulateReply.result)
}
inline ::std::string* SimulateReply::mutable_result() {
  
  // @@protoc_insertion_point(field_mutable:virtualmachine.SimulateReply.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SimulateReply::release_result() {
  // @@protoc_insertion_point(field_release:virtualmachine.SimulateReply.result)
  
  return result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SimulateReply::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    
  } else {
    
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:virtualmachine.SimulateReply.result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace virtualmachine

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_simulate_2eproto__INCLUDED
