// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: translate.proto

#ifndef PROTOBUF_translate_2eproto__INCLUDED
#define PROTOBUF_translate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_translate_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsTranslateRequestImpl();
void InitDefaultsTranslateRequest();
void InitDefaultsTranslateReplyImpl();
void InitDefaultsTranslateReply();
inline void InitDefaults() {
  InitDefaultsTranslateRequest();
  InitDefaultsTranslateReply();
}
}  // namespace protobuf_translate_2eproto
namespace translator {
class TranslateReply;
class TranslateReplyDefaultTypeInternal;
extern TranslateReplyDefaultTypeInternal _TranslateReply_default_instance_;
class TranslateRequest;
class TranslateRequestDefaultTypeInternal;
extern TranslateRequestDefaultTypeInternal _TranslateRequest_default_instance_;
}  // namespace translator
namespace translator {

// ===================================================================

class TranslateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:translator.TranslateRequest) */ {
 public:
  TranslateRequest();
  virtual ~TranslateRequest();

  TranslateRequest(const TranslateRequest& from);

  inline TranslateRequest& operator=(const TranslateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TranslateRequest(TranslateRequest&& from) noexcept
    : TranslateRequest() {
    *this = ::std::move(from);
  }

  inline TranslateRequest& operator=(TranslateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TranslateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TranslateRequest* internal_default_instance() {
    return reinterpret_cast<const TranslateRequest*>(
               &_TranslateRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TranslateRequest* other);
  friend void swap(TranslateRequest& a, TranslateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TranslateRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  TranslateRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TranslateRequest& from);
  void MergeFrom(const TranslateRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TranslateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // @@protoc_insertion_point(class_scope:translator.TranslateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  mutable int _cached_size_;
  friend struct ::protobuf_translate_2eproto::TableStruct;
  friend void ::protobuf_translate_2eproto::InitDefaultsTranslateRequestImpl();
};
// -------------------------------------------------------------------

class TranslateReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:translator.TranslateReply) */ {
 public:
  TranslateReply();
  virtual ~TranslateReply();

  TranslateReply(const TranslateReply& from);

  inline TranslateReply& operator=(const TranslateReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TranslateReply(TranslateReply&& from) noexcept
    : TranslateReply() {
    *this = ::std::move(from);
  }

  inline TranslateReply& operator=(TranslateReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TranslateReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TranslateReply* internal_default_instance() {
    return reinterpret_cast<const TranslateReply*>(
               &_TranslateReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(TranslateReply* other);
  friend void swap(TranslateReply& a, TranslateReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TranslateReply* New() const PROTOBUF_FINAL { return New(NULL); }

  TranslateReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TranslateReply& from);
  void MergeFrom(const TranslateReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TranslateReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // int64 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int64 status() const;
  void set_status(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:translator.TranslateReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::int64 status_;
  mutable int _cached_size_;
  friend struct ::protobuf_translate_2eproto::TableStruct;
  friend void ::protobuf_translate_2eproto::InitDefaultsTranslateReplyImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TranslateRequest

// string code = 1;
inline void TranslateRequest::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TranslateRequest::code() const {
  // @@protoc_insertion_point(field_get:translator.TranslateRequest.code)
  return code_.GetNoArena();
}
inline void TranslateRequest::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:translator.TranslateRequest.code)
}
#if LANG_CXX11
inline void TranslateRequest::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:translator.TranslateRequest.code)
}
#endif
inline void TranslateRequest::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:translator.TranslateRequest.code)
}
inline void TranslateRequest::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:translator.TranslateRequest.code)
}
inline ::std::string* TranslateRequest::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:translator.TranslateRequest.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TranslateRequest::release_code() {
  // @@protoc_insertion_point(field_release:translator.TranslateRequest.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TranslateRequest::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:translator.TranslateRequest.code)
}

// -------------------------------------------------------------------

// TranslateReply

// int64 status = 1;
inline void TranslateReply::clear_status() {
  status_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TranslateReply::status() const {
  // @@protoc_insertion_point(field_get:translator.TranslateReply.status)
  return status_;
}
inline void TranslateReply::set_status(::google::protobuf::int64 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:translator.TranslateReply.status)
}

// string code = 2;
inline void TranslateReply::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TranslateReply::code() const {
  // @@protoc_insertion_point(field_get:translator.TranslateReply.code)
  return code_.GetNoArena();
}
inline void TranslateReply::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:translator.TranslateReply.code)
}
#if LANG_CXX11
inline void TranslateReply::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:translator.TranslateReply.code)
}
#endif
inline void TranslateReply::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:translator.TranslateReply.code)
}
inline void TranslateReply::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:translator.TranslateReply.code)
}
inline ::std::string* TranslateReply::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:translator.TranslateReply.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TranslateReply::release_code() {
  // @@protoc_insertion_point(field_release:translator.TranslateReply.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TranslateReply::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:translator.TranslateReply.code)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace translator

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_translate_2eproto__INCLUDED
